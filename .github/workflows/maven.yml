
name: GroupOrder Backend CICD

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
    types: [opened, synchronize, reopened]

jobs:

  build:

    name: Build
    #Run on Ubuntu using the latest version
    runs-on: ubuntu-latest
    steps:
      #Check-out your repository under $GITHUB_WORKSPACE, so your workflow can access it
      - uses: actions/checkout@v4

      - name: Checkout code with submodules
        uses: actions/checkout@v3
        with:
          submodules: recursive  # This ensures submodules are checked out

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

        #Set up Maven cache
      - name: Cache Maven packages
        #This action allows caching dependencies and build outputs to improve workflow execution time.
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

        #Build the application using Maven
      - name: Upload the maven to dockerhub Container
        run: mvn clean package -P build-docker-image


#  deploy:
#    #Depends on build's job
#    needs: build
#    name: Deploy
#    #Run on Ubuntu using the latest version
#    runs-on: ubuntu-latest
#    steps:
#      - name: Download JAR
#        #Download the artifact which was uploaded in the build's job
#        uses: actions/download-artifact@v4
#        with:
#          name: artifact
#      #Deploy the artifact (JAR) into AWS Beanstalk
#      - name: Deploy to EB
#        uses: einaregilsson/beanstalk-deploy@v18
#        with:
#          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
#          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#          use_existing_version_if_available: true
#          application_name: grouporder-backend
#          environment_name: ${{ secrets.AWS_ENVIROMENT_NAME }}
#          version_label: ${{github.SHA}}
#          region: ${{ secrets.AWS_REGION }}
#          deployment_package: groupFoodOrder-0.0.1-SNAPSHOT.jar
#          wait_for_deployment: true
#          wait_for_environment_recovery: 60
