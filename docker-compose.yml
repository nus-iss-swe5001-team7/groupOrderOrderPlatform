services:
  postgres:
    container_name: postgres
    image: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: user
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init_postgres.sh:/docker-entrypoint-initdb.d/init_postgres.sh
      - ./create_db_and_user.sql:/docker-entrypoint-initdb.d/create_db_and_user.sql
    ports:
      - "5432:5432"
    networks:
      - postgres
    restart: unless-stopped

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - pgadmin:/var/lib/pgadmin
    ports:
      - "5050:80"
    networks:
      - postgres
    restart: unless-stopped

  mongodb:
    image: mongo:4.2.3-bionic
    container_name: mongodb
    networks:
      - logmonnet
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: rootpassword
      MONGO_INITDB_DATABASE: restaurant
    volumes:
      - ./init_mongodb.js:/docker-entrypoint-initdb.d/init.js
    ports:
      - "27017:27017"

  zipkin:
    image: openzipkin/zipkin
    container_name: zipkin
    ports:
      - "9411:9411"
    networks:
      - spring

  service-registry:
    image: minjun7/service-registry:latest
    container_name: service-registry
    ports:
      - "8761:8761"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    networks:
      - spring

  api-gateway:
    image: minjun7/api-gateway:latest
    container_name: api-gateway
    ports:
      - "8765:8765"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    networks:
      - spring
    depends_on:
      - service-registry

  user-service:
    image: minjun7/user-service:latest
    container_name: user-service
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    networks:
      - spring
      - postgres
    depends_on:
      - postgres
      - service-registry

  restaurant-service:
    image: minjun7/restaurant-service:latest
    container_name: restaurant-service
    ports:
      - "8090:8090"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATA_MONGODB_URI=mongodb://root:rootpassword@mongodb:27017/restaurant?authSource=admin
    networks:
      - spring
      - logmonnet
    depends_on:
      - mongodb
      - service-registry


networks:
  postgres:
    driver: bridge
  spring:
    driver: bridge
  logmonnet:
    driver: bridge

volumes:
  postgres_data:
  pgadmin:
